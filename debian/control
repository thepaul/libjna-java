Source: libjna-java
Section: java
Priority: optional
Maintainer: Debian Java maintainers <pkg-java-maintainers@lists.alioth.debian.org>
Uploaders: Michael Koch <konqueror@gmx.de>
Build-Depends: debhelper (>= 7), openjdk-6-jdk, ant, ant-optional, libx11-dev, libxt-dev, libffi-dev, pkg-config, quilt
Standards-Version: 3.8.3
Homepage: http://jna.dev.java.net/

Package: libjna-java
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, default-jre-headless | java2-runtime-headless
Suggests: libjna-java-doc
Description: Dynamic access of native libraries from Java without JNI
 JNA provides Java programs easy access to native shared libraries without
 writing anything but Java code - no JNI or native code is required. This
 functionality is comparable to Windows' Platform/Invoke and Python's ctypes.
 Access is dynamic at runtime without code generation.
 .
 JNA's design aims to provide native access in a natural way with a minimum of
 effort. No boilerplate or generated code is required. While some attention is
 paid to performance, correctness and ease of use take priority.
 .
 The JNA library uses a small native library stub to dynamically invoke native
 code. The developer uses a Java interface to describe functions and structures
 in the target native library. This makes it quite easy to take advantage of
 native platform features without incurring the high overhead of configuring and
 building JNI code for multiple platforms.

Package: libjna-java-doc
Section: doc
Architecture: all
Depends: ${misc:Depends}
Description: Dynamic access of native libraries from Java without JNI (documentation)
 JNA provides Java programs easy access to native shared libraries without
 writing anything but Java code - no JNI or native code is required. This
 functionality is comparable to Windows' Platform/Invoke and Python's ctypes.
 Access is dynamic at runtime without code generation.
 .
 This package contains the Javadoc API documentation.
